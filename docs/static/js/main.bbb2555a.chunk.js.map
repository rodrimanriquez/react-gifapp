{"version":3,"sources":["components/AddCategory.jsx","components/customText/Title.jsx","components/GifItemCard.jsx","helpers/getGifs.js","helpers/apiKey.js","components/LoadingItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifApp.jsx","index.js"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","id","value","onChange","target","onFocus","Title","textTitle","GifItemCard","image","key","src","url","alt","title","tags","lenght","map","tag","getGifs","cat","a","encodeURI","axios","get","data","gifs","img","images","downsized_medium","LoadingItem","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","item","GifApp","categories","idx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbb2555a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue,...cats,]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"mt-5\" onSubmit={handleSubmit}>\r\n      <label className=\"block text-gray-700 text-sm font-bold mb-4\">Escriba una categoria</label>  \r\n      <input\r\n        type=\"text\"\r\n        className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-1/2 py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n        id=\"inline-full-name\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        onFocus={() => setInputValue(\"\")}\r\n      />\r\n\r\n      <button\r\n        className=\"bg-purple-500 hover:bg-purple-700 text-white font-bold rounded-lg py-2 px-4 ml-4\"\r\n        type=\"submit\"\r\n      >\r\n        Agregar\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\n\r\nconst Title = ({textTitle}) => <p className=\"text-3xl font-bold\">{textTitle}</p>;\r\n\r\n\r\nexport default Title;\r\n","import React from 'react'\r\n\r\nconst GifItemCard = ({image}) => {\r\n    return (\r\n        <div\r\n          key={image.id}\r\n          className=\"max-w-sm rounded-lg overflow-hidden shadow-lg col-span-1\"\r\n        >\r\n          <img\r\n            className=\"h-64 w-screen\"\r\n            src={image.url.url}\r\n            alt=\"Sunset in the mountains\"\r\n          />\r\n          <div className=\"px-6 pt-4\">\r\n            <div className=\"font-bold text-xl mb-2\">{image.title}</div>\r\n          </div>\r\n          <div className=\"px-6 pt-4 pb-2\">\r\n            {image.tags.lenght >= 1 &&\r\n              image.tags.map((tag) => (\r\n                <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n                  #{tag}\r\n                </span>\r\n              ))}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItemCard\r\n","import axios from 'axios';\r\nimport { api_key } from './apiKey';\r\n\r\nexport const getGifs = async (cat) => {\r\n    const limitValue = \"6\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n      cat\r\n    )}&limit=${limitValue}&api_key=${api_key}`;\r\n\r\n    const { data } = await axios.get(url);\r\n\r\n    const gifs = data.data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium,\r\n        tags: img.tags,\r\n      };\r\n    });\r\n    return gifs\r\n};","export const api_key = \"HhM4OKiue8fLXn14dKlhfCI4es8Rgvhf\";\r\n","import React from \"react\";\r\n\r\nconst LoadingItem = () => {\r\n  return (\r\n    <div className=\"border border-gray-300 shadow rounded-lg max-w-sm w-full mx-auto col-span-1\">\r\n      <div className=\"animate-pulse space-x-4 text-center\">\r\n        <div className=\"img-full bg-gray-400 h-64 w-full rounded-t-lg\"></div>  \r\n        <div className=\"h-4 bg-gray-400 rounded mt-5 m-5 w-3/4\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingItem;\r\n","import React from \"react\";\r\nimport Title from \"./customText/Title\";\r\nimport GifItemCard from \"./GifItemCard\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport LoadingItem from \"./LoadingItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10\">\r\n          {images.map((item) => (\r\n            <LoadingItem key={item} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 \">\r\n          <div className=\"block col-span-1 md:col-span-2 lg:col-span-3 mt-4\">\r\n            <Title textTitle={category} />\r\n          </div>\r\n          {images.map((item) => (\r\n            <GifItemCard key={item.id} image={item} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [1,2,3,4,5,6],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n\r\n        getGifs( category ).then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n        })\r\n\r\n    },[category])\r\n\r\n    return state;\r\n}","import React from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport Title from \"./components/customText/Title\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifApp = () => {\r\n  const [categories, setCategories] = React.useState([\"One punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mx-auto p-5 text-center\">\r\n        <Title textTitle=\"Gif App\" />\r\n\r\n        <AddCategory setCategories={setCategories} />\r\n\r\n        <ul className=\"list-decimal mt-5\">\r\n          {categories.map((item, idx) => (\r\n            <GifGrid key={idx} category={item}/>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifApp from \"./GifApp\";\nimport \"./index.css\";\n\nimport './assets/css/main.css';\n\n\nReactDOM.render(<GifApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}